<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_blackjack_1_1_logic_1_1_stack" kind="class" language="C#" prot="public">
    <compoundname>Blackjack::Logic::Stack</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_stack_1a078a35a277841d667550ea38ecbfca7b" prot="private" static="no" mutable="no">
        <type>List&lt; <ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref> &gt;</type>
        <definition>List&lt;Card&gt; Blackjack.Logic.Stack.stack</definition>
        <argsstring></argsstring>
        <name>stack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="15" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="15" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_stack_1adc713096b6bc456ab79bfcb5a7519932" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Blackjack.Logic.Stack.count</definition>
        <argsstring></argsstring>
        <name>count</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="16" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_blackjack_1_1_logic_1_1_stack_1a372985925fb906ad9c7cda472d638685" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>int Blackjack.Logic.Stack.Value</definition>
        <argsstring></argsstring>
        <name>Value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="20" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_stack_1ae3be599d26cf766d54643a472e774573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Stack.AddDeck</definition>
        <argsstring>(Deck d)</argsstring>
        <name>AddDeck</name>
        <param>
          <type><ref refid="class_blackjack_1_1_logic_1_1_deck" kindref="compound">Deck</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Diese Methode liefert nichts zurück und hat einen Parameter (dort befindet sich eine Instanz, der Klasse <ref refid="class_blackjack_1_1_logic_1_1_deck" kindref="compound">Deck</ref>). Bei dieser Methode wird mithilfe der Methode der Klasse <ref refid="class_blackjack_1_1_logic_1_1_deck" kindref="compound">Deck</ref> („GetCards“) ein neues <ref refid="class_blackjack_1_1_logic_1_1_deck" kindref="compound">Deck</ref> in das <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> gegeben. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>d</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="37" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_stack_1ad33a0cf712a0b18e6f06409ebf501686" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref></type>
        <definition>Card Blackjack.Logic.Stack.GetCard</definition>
        <argsstring>()</argsstring>
        <name>GetCard</name>
        <briefdescription>
<para>Bei dieser Methode wird eine Karte von der obersten Stelle genommen. Diese Methode wird in der Methode „TakeCardStack“ verwendet, damit der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> eine Karte nehmen kann. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Diese Methode liefert eine Karte zurück</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="49" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="49" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_stack_1a4630b7948c73bf85bcee246f81b03c5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Stack.Shuffle</definition>
        <argsstring>()</argsstring>
        <name>Shuffle</name>
        <briefdescription>
<para>In dieser Methode werden die Karten, die sich im <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> befinden, vermischt. Dies passiert mithilfe der Random-Klasse. Shuffle wird in der Dealer- Klasse verwendet(„CreateNewStack“). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="68" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="68" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_stack_1a1ce0e1c0efe47044e958d5957d0bf928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Blackjack.Logic.Stack.Stack</definition>
        <argsstring>()</argsstring>
        <name>Stack</name>
        <briefdescription>
<para>Das ist der Konstruktor. Im Konstruktor wird eine neue Liste von Karten erstellt für das <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="86" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="86" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Diese Klasse wird dazu verwendet, damit eine neues <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> erstellt werden kann. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" line="13" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Stack.cs" bodystart="12" bodyend="91"/>
    <listofallmembers>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1ae3be599d26cf766d54643a472e774573" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>AddDeck</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1adc713096b6bc456ab79bfcb5a7519932" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>count</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1ad33a0cf712a0b18e6f06409ebf501686" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>GetCard</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1a4630b7948c73bf85bcee246f81b03c5a" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>Shuffle</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1a078a35a277841d667550ea38ecbfca7b" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>stack</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1a1ce0e1c0efe47044e958d5957d0bf928" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>Stack</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_stack_1a372985925fb906ad9c7cda472d638685" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Stack</scope><name>Value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
