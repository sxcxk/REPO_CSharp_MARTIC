<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_blackjack_1_1_logic_1_1_dealer" kind="class" language="C#" prot="public">
    <compoundname>Blackjack::Logic::Dealer</compoundname>
    <basecompoundref refid="class_blackjack_1_1_logic_1_1_person" prot="public" virt="non-virtual">Blackjack.Logic.Person</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_dealer_1a16b54ee9e537119def3f078535e706fb" prot="private" static="no" mutable="no">
        <type><ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref></type>
        <definition>Stack Blackjack.Logic.Dealer.s</definition>
        <argsstring></argsstring>
        <name>s</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" line="19" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_dealer_1ad7b3480d431e58ef856280a90a9d3139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref></type>
        <definition>Card Blackjack.Logic.Dealer.TakeCardStack</definition>
        <argsstring>()</argsstring>
        <name>TakeCardStack</name>
        <briefdescription>
<para>In dieser Methode nimmt der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> die oberste Karte vom <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> (mit der GetCard-Methode, die sich in der Stack-Klasse befindet), um sie später dem Spieler geben zu können. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Diese Methode liefert eine Karte zurück.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" line="30" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_dealer_1af649a73ff52d49321d99013266936a1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Dealer.CreateNewStack</definition>
        <argsstring>()</argsstring>
        <name>CreateNewStack</name>
        <briefdescription>
<para>Diese Methode liefert nichts zurück. In dieser Methode wird zuerst ein neues <ref refid="class_blackjack_1_1_logic_1_1_deck" kindref="compound">Deck</ref> erstellt, damit dann ein neues <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> mit dem <ref refid="class_blackjack_1_1_logic_1_1_deck" kindref="compound">Deck</ref> erstellt werden kann. Am Ende wird das <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> nochmal gemischt (mit der Methode Shuffle, die sich in der Stack-Klasse befindet). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" line="43" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_dealer_1aae73172149f2cff3515e111d4bf6d3c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Blackjack.Logic.Dealer.Dealer</definition>
        <argsstring>()</argsstring>
        <name>Dealer</name>
        <briefdescription>
<para>Dies ist keine Methode, sondern der Konstruktor. Im Konstruktor wird ein neues <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> erstellt, damit es dann mit den Methoden verbunden werden kann z.B Shuffle(). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" line="57" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" bodystart="57" bodyend="60"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Diese Klasse wird dazu verwendet, um einen neuen Spieler zu erstellen, damit man diesen in der Game-Klasse bzw. im GUI verwenden kann. Zusätzlich ist der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> dazu verantwortlich das <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> zu erstellen und verwalten, damit gespielt werden kann. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="13">
        <label>Blackjack.Logic.Dealer</label>
        <link refid="class_blackjack_1_1_logic_1_1_dealer"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>Person</label>
        <link refid="class_blackjack_1_1_logic_1_1_person"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>Blackjack.Logic.Card</label>
        <link refid="class_blackjack_1_1_logic_1_1_card"/>
      </node>
      <node id="15">
        <label>Blackjack.Logic.Dealer</label>
        <link refid="class_blackjack_1_1_logic_1_1_dealer"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>Blackjack.Logic.Stack</label>
        <link refid="class_blackjack_1_1_logic_1_1_stack"/>
      </node>
      <node id="16">
        <label>Person</label>
        <link refid="class_blackjack_1_1_logic_1_1_person"/>
        <childnode refid="17" relation="usage">
          <edgelabel>h</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>card</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>Blackjack.Logic.Hand</label>
        <link refid="class_blackjack_1_1_logic_1_1_hand"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" line="17" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Dealer.cs" bodystart="16" bodyend="62"/>
    <listofallmembers>
      <member refid="class_blackjack_1_1_logic_1_1_person_1a87ae4b2ad857c7925a7b3e548ae63f32" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>Card</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_person_1a042705b508317261388c18ef6b623e92" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>ClearHand</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_dealer_1af649a73ff52d49321d99013266936a1d" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>CreateNewStack</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_dealer_1aae73172149f2cff3515e111d4bf6d3c1" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>Dealer</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_person_1ae109529fcb0ecc020f169cc0cc9b3558" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>GetCards</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_person_1a3812140b290b8c6551bc9906184ed5e5" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>GetPoints</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_person_1a0d015ea253376afb78edd93aa73cd21c" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>Person</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_dealer_1a16b54ee9e537119def3f078535e706fb" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>s</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_person_1ae245d1c630b20b76de84d1ec8af051a7" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>TakeCard</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_dealer_1ad7b3480d431e58ef856280a90a9d3139" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Dealer</scope><name>TakeCardStack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
