<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="class_blackjack_1_1_logic_1_1_game" kind="class" language="C#" prot="public">
    <compoundname>Blackjack::Logic::Game</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_game_1afc59b05ddb17134d6ff3a6574a1b71d5" prot="private" static="no" mutable="no">
        <type><ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref></type>
        <definition>Dealer Blackjack.Logic.Game.d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="18" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_game_1a83544f98dffab2254eeb940687220c97" prot="private" static="no" mutable="no">
        <type><ref refid="class_blackjack_1_1_logic_1_1_player" kindref="compound">Player</ref></type>
        <definition>Player Blackjack.Logic.Game.p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="19" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_game_1a666f1d4206d40ab929a5a70887f8342d" prot="private" static="no" mutable="no">
        <type><ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref></type>
        <definition>Card Blackjack.Logic.Game.c</definition>
        <argsstring></argsstring>
        <name>c</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="20" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_game_1a4ca98fe914c7060bab5c36ade262c0e6" prot="private" static="no" mutable="no">
        <type>List&lt; <ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref> &gt;</type>
        <definition>List&lt;Card&gt; Blackjack.Logic.Game.pListCard</definition>
        <argsstring></argsstring>
        <name>pListCard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="21" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_blackjack_1_1_logic_1_1_game_1aced2bbf087316a48db06d0a53014aec8" prot="private" static="no" mutable="no">
        <type>List&lt; <ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref> &gt;</type>
        <definition>List&lt;Card&gt; Blackjack.Logic.Game.dListCard</definition>
        <argsstring></argsstring>
        <name>dListCard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="22" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a0fde5d0b10c9f8d5edfa1ce213f80879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref></type>
        <definition>Card Blackjack.Logic.Game.Hit</definition>
        <argsstring>()</argsstring>
        <name>Hit</name>
        <briefdescription>
<para>Die Hit-Methode bekommt eine Karte vom <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref>, damit diese Karte im letzten Schritt dem Spieler übergeben werden kann, ( falls der Benutzer diese Methode mit einem Button auslöst). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert eine Karte zurück</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="33" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a23f4e9ae28b646171cf27b289f0d0163" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Blackjack.Logic.Game.GetPlayerPoints</definition>
        <argsstring>()</argsstring>
        <name>GetPlayerPoints</name>
        <briefdescription>
<para>In dieser Methode wird der Wert der <ref refid="class_blackjack_1_1_logic_1_1_hand" kindref="compound">Hand</ref> des Spielers zurückgeliefert, dabei wird eine Methode verwendet, die sich in der Klasse <ref refid="class_blackjack_1_1_logic_1_1_person" kindref="compound">Person</ref> befindet, benutzt. Auf diese Methode wird in einem späteren Zeitpunkt Bezug genommen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert die Punkte des Spielers zurück</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="47" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a9ae927e617891b72a8f39d36d1ea2a18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Blackjack.Logic.Game.GetDealerPoints</definition>
        <argsstring>()</argsstring>
        <name>GetDealerPoints</name>
        <briefdescription>
<para>In dieser Methode wird der Wert der <ref refid="class_blackjack_1_1_logic_1_1_hand" kindref="compound">Hand</ref> des Dealers zurückgeliefert, dabei wird eine Methode verwendet, die sich in der Klasse <ref refid="class_blackjack_1_1_logic_1_1_person" kindref="compound">Person</ref> befindet, benutzt. Auf diese Methode wird in einem späteren Zeitpunkt Bezug genommen. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert die Punkte des Dealers</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="59" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1ab92d4a9f1b8617bf6ddf9fcb7750258d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.Stay</definition>
        <argsstring>()</argsstring>
        <name>Stay</name>
        <briefdescription>
<para>Die Stay-Methode startet den Zug des Dealers. Der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> nimmt solange eine Karte, bis er nicht auf den Kartenwert 17 oder höher kommt. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="69" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a3871911c32d96fc13bb02f1da62a38d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Blackjack.Logic.Game.WinLossDraw</definition>
        <argsstring>()</argsstring>
        <name>WinLossDraw</name>
        <briefdescription>
<para>In dieser Methode wird geprüft, ob der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> oder Spieler gewonnen hat, indem die Kartenwerte verglichen werden. Also, wenn der Spieler einen höheren Kartenwert als der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> hat aber nicht über 21 liegt, dann hat der Spieler gewonnen und es wird der int-Wert 1 zurückgeliefert. Falls es umgekehrt ist, wird der Wert 2 zurückgeliefert. Wenn die beiden den gleichen Kartenwert haben, dann wird der Wert 0 zurückgegeben. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert einen int Wert zurück (0,1,2 oder -1)</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="90" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="90" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1abda8fe44951cab466ca3ddb33a0cba5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Blackjack.Logic.Game.BustPlayer</definition>
        <argsstring>()</argsstring>
        <name>BustPlayer</name>
        <briefdescription>
<para>Die Methode prüft, ob der Spieler über den Wert 21 gekommen ist, falls dies passiert, wird der Wert true zurückgegeben, ansonsten false. Der Wert der <ref refid="class_blackjack_1_1_logic_1_1_hand" kindref="compound">Hand</ref> vom Spieler wird mit der Methode, die sich in der Game-Klasse befindet, geholt(GetPlayerPoints). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert einen Bool zurück</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="118" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="118" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a91eebe6f135b5bee013e09b2b227e187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool Blackjack.Logic.Game.BustDealer</definition>
        <argsstring>()</argsstring>
        <name>BustDealer</name>
        <briefdescription>
<para>Die Methode prüft, ob der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> über den Wert 21 gekommen ist, falls dies passiert, wird der Wert true zurückgegeben, ansonsten false. Der Wert der <ref refid="class_blackjack_1_1_logic_1_1_hand" kindref="compound">Hand</ref> vom <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> wird mit der Methode, die sich in der Game-Klasse befindet, geholt(GetDealerPoints). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert einen Bool zurück</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="137" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="137" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a94922722d065d53afa366e66263668cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.StartNewGame</definition>
        <argsstring>()</argsstring>
        <name>StartNewGame</name>
        <briefdescription>
<para>In der Methode werden alle Karten gelöscht, die sich in den jeweiligen Listen befinden, das heißt die Liste des Dealers und Spielers, damit sie im Anschluss wenn das neue <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> erstellt und vermischt wurde, mit jeweils 2 Karten befüllt werden. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="153" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="153" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a1ce19287ffc27e410d946261cf1177cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.NewStack</definition>
        <argsstring>()</argsstring>
        <name>NewStack</name>
        <briefdescription>
<para>Bei dieser Methode erstellt der <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> ein neues <ref refid="class_blackjack_1_1_logic_1_1_stack" kindref="compound">Stack</ref> für das neue Spiel. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="170" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a8c109551a026d2141011a13c51393139" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref> &gt;</type>
        <definition>List&lt;Card&gt; Blackjack.Logic.Game.GetPlayerCards</definition>
        <argsstring>()</argsstring>
        <name>GetPlayerCards</name>
        <briefdescription>
<para>Hier werden die ganzen Karten, die sich auf der <ref refid="class_blackjack_1_1_logic_1_1_hand" kindref="compound">Hand</ref> des Dealers befinden als Liste zurückgeliefert. Dazu wird die Methode der Klasse <ref refid="class_blackjack_1_1_logic_1_1_person" kindref="compound">Person</ref> verwendet, die später näher erklärt wird. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="180" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1aded960eebc136785d18f40cf295591d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Blackjack.Logic.Game.Balance</definition>
        <argsstring>()</argsstring>
        <name>Balance</name>
        <briefdescription>
<para>Die Methode liefert den vorhandenen Geldbetrag, der sich im <ref refid="class_blackjack_1_1_logic_1_1_wallet" kindref="compound">Wallet</ref> des Spielers befindet, zurück .Hier wird eine Methode benutzt, die sich in der Klasse <ref refid="class_blackjack_1_1_logic_1_1_player" kindref="compound">Player</ref> befindet, auf die aber später näher eingegangen wird. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert einen int-Wert</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="191" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a4dd39c5cb082edcb925a28c0f95f5a19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>List&lt; <ref refid="class_blackjack_1_1_logic_1_1_card" kindref="compound">Card</ref> &gt;</type>
        <definition>List&lt;Card&gt; Blackjack.Logic.Game.GetDealerCards</definition>
        <argsstring>()</argsstring>
        <name>GetDealerCards</name>
        <briefdescription>
<para>Hier werden die ganzen Karten, die sich auf der <ref refid="class_blackjack_1_1_logic_1_1_hand" kindref="compound">Hand</ref> des Spielers befinden als Liste zurückgeliefert. Dazu wird die Methode der Klasse <ref refid="class_blackjack_1_1_logic_1_1_person" kindref="compound">Person</ref> verwendet, die später näher erklärt wird. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Liefert eine Liste von Karten</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="202" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1aa6562b93bf799f61e9040f6bb9efba4c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.SetBet</definition>
        <argsstring>(int amount)</argsstring>
        <name>SetBet</name>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>In dieser Methode wird der Einsatz des Spielers getätigt. Dazu wird die Methode des Spielers verwendet, die später näher erklärt wird. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="213" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="213" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a7faa53c8e5be3da342109134ff6a4725" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.GetMoney</definition>
        <argsstring>(int amount)</argsstring>
        <name>GetMoney</name>
        <param>
          <type>int</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
<para>Bei GetMoney wird dafür gesorgt, dass der Spieler seinen Gewinn bekommt. Dies geschieht mit einer Methode, die sich in der Player-Klasse befindet. Auf diese wird, wie bei den anderen Methoden, später Bezug genommen. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="225" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1a5f64cf55cc6932d38e3efb3921a0413d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.SaveGame</definition>
        <argsstring>(string filename)</argsstring>
        <name>SaveGame</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Hier wird der Spielstand des aktuellen Spiels mit dem mitgegebenen File-Namen gespeichert, indem zuerst die Karten, der Wert des Wallets und der Kartenwert des Spielers gespeichert werden. Um danach die Karten und den Kartenwert des Dealers zu speichern. Diese Daten werden in einer Datei hinzugefügt. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="239" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="239" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1af0c539e462077497fe9a8d36761e7b2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Blackjack.Logic.Game.LoadGame</definition>
        <argsstring>(string filename)</argsstring>
        <name>LoadGame</name>
        <param>
          <type>string</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="274" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="274" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_blackjack_1_1_logic_1_1_game_1af2fba2e23eabf5e6bf9092a9e8cd4243" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Blackjack.Logic.Game.Game</definition>
        <argsstring>()</argsstring>
        <name>Game</name>
        <briefdescription>
<para>Dies ist keine Methode, sondern der Konstruktor der Klasse und besitzt deswegen an keinen Rückgabewert. Der Konstruktor erstellt einen neuen Spieler beziehungsweise <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> und jeweils die Liste für den <ref refid="class_blackjack_1_1_logic_1_1_dealer" kindref="compound">Dealer</ref> und <ref refid="class_blackjack_1_1_logic_1_1_player" kindref="compound">Player</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="305" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="305" bodyend="311"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Die Klasse dientnt zur Verwaltung des Spiels, die dazu mehrere Klassen beinhaltet. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="37">
        <label>Blackjack.Logic.Card</label>
        <link refid="class_blackjack_1_1_logic_1_1_card"/>
      </node>
      <node id="39">
        <label>Blackjack.Logic.Dealer</label>
        <link refid="class_blackjack_1_1_logic_1_1_dealer"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>s</edgelabel>
        </childnode>
      </node>
      <node id="40">
        <label>Blackjack.Logic.Stack</label>
        <link refid="class_blackjack_1_1_logic_1_1_stack"/>
      </node>
      <node id="33">
        <label>Blackjack.Logic.Game</label>
        <link refid="class_blackjack_1_1_logic_1_1_game"/>
        <childnode refid="34" relation="usage">
          <edgelabel>p</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>c</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>d</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>Blackjack.Logic.Wallet</label>
        <link refid="class_blackjack_1_1_logic_1_1_wallet"/>
      </node>
      <node id="35">
        <label>Person</label>
        <link refid="class_blackjack_1_1_logic_1_1_person"/>
        <childnode refid="36" relation="usage">
          <edgelabel>h</edgelabel>
        </childnode>
        <childnode refid="37" relation="usage">
          <edgelabel>card</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>Blackjack.Logic.Player</label>
        <link refid="class_blackjack_1_1_logic_1_1_player"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>w</edgelabel>
        </childnode>
      </node>
      <node id="36">
        <label>Blackjack.Logic.Hand</label>
        <link refid="class_blackjack_1_1_logic_1_1_hand"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" line="16" column="1" bodyfile="C:/Users/Petar/Desktop/Blackjack/Software/Blackjack.Logic/Game.cs" bodystart="15" bodyend="313"/>
    <listofallmembers>
      <member refid="class_blackjack_1_1_logic_1_1_game_1aded960eebc136785d18f40cf295591d2" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>Balance</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a91eebe6f135b5bee013e09b2b227e187" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>BustDealer</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1abda8fe44951cab466ca3ddb33a0cba5d" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>BustPlayer</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a666f1d4206d40ab929a5a70887f8342d" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>c</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1afc59b05ddb17134d6ff3a6574a1b71d5" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>d</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1aced2bbf087316a48db06d0a53014aec8" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>dListCard</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1af2fba2e23eabf5e6bf9092a9e8cd4243" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>Game</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a4dd39c5cb082edcb925a28c0f95f5a19" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>GetDealerCards</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a9ae927e617891b72a8f39d36d1ea2a18" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>GetDealerPoints</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a7faa53c8e5be3da342109134ff6a4725" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>GetMoney</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a8c109551a026d2141011a13c51393139" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>GetPlayerCards</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a23f4e9ae28b646171cf27b289f0d0163" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>GetPlayerPoints</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a0fde5d0b10c9f8d5edfa1ce213f80879" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>Hit</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1af0c539e462077497fe9a8d36761e7b2b" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>LoadGame</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a1ce19287ffc27e410d946261cf1177cd" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>NewStack</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a83544f98dffab2254eeb940687220c97" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>p</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a4ca98fe914c7060bab5c36ade262c0e6" prot="private" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>pListCard</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a5f64cf55cc6932d38e3efb3921a0413d" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>SaveGame</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1aa6562b93bf799f61e9040f6bb9efba4c" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>SetBet</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a94922722d065d53afa366e66263668cb" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>StartNewGame</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1ab92d4a9f1b8617bf6ddf9fcb7750258d" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>Stay</name></member>
      <member refid="class_blackjack_1_1_logic_1_1_game_1a3871911c32d96fc13bb02f1da62a38d6" prot="public" virt="non-virtual"><scope>Blackjack::Logic::Game</scope><name>WinLossDraw</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
